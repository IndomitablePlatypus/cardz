{
    "openapi": "3.0.2",
    "info": {
        "title": "Cardz",
        "description": "Bonus cards server-side application",
        "version": "0.5.1.254"
    },
    "servers": [
        {
            "url": "http:\/\/localhost:8000\/api\/v1",
            "description": "App Environment"
        },
        {
            "url": "http:\/\/localhost:8000\/api\/v1",
            "description": "Default"
        }
    ],
    "paths": {
        "\/customer\/get-token": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Get user token",
                "description": "Returns new API user token (for basic bearer auth). Requires identity, password and device name.",
                "operationId": "GetCustomerToken",
                "requestBody": {
                    "description": "Get customer API access token for the specific device. <br>\n                          With each request new token is generated. Old ones are invalidated shortly after. <br>\n                          *Tokens on other customer devices remain unaffected.\n            ",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/GetTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/register": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Register user",
                "description": "Registers new user with email OR phone, password, device name (for token). Returns new auth token.",
                "operationId": "RegisterCustomer",
                "requestBody": {
                    "description": "Register new customer",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UserAlreadyRegisteredException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/workspaces": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Workspaces",
                "description": "Returns all workspaces",
                "operationId": "GetCustomerWorkspaces",
                "responses": {
                    "200": {
                        "description": "Customer Workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "List of all workspaces",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/CustomerWorkspace"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/wipe-tokens": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Clear user tokens",
                "description": "Removes all existing access tokens for the current user. (I.e. logout)",
                "operationId": "ClearCustomerToken",
                "responses": {
                    "200": {
                        "description": "All tokens successfully cleared",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Customer Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/id": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get authorized user id",
                "description": "Returns id of the authenticated user.",
                "operationId": "GetCustomerId",
                "responses": {
                    "200": {
                        "description": "Customer Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Current customer Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/customer\/profile": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get authorized user profile",
                "description": "Returns profile.",
                "operationId": "GetCustomerProfile",
                "responses": {
                    "200": {
                        "description": "Customer Profile",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/customer\/card": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "User cards",
                "description": "Returns all active cards for the current user.",
                "operationId": "GetCustomerCards",
                "responses": {
                    "200": {
                        "description": "All of the customer's issued cards",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/IssuedCard"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/customer\/card\/{cardId}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "User card",
                "description": "Returns an active card, owned by the current user, by its id.",
                "operationId": "GetCustomerCard",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Issued card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/IssuedCard"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/workspace": {
            "get": {
                "tags": [
                    "business",
                    "workspace"
                ],
                "summary": "Get workspaces",
                "description": "Returns all workspaces where the current user is a collaborator.",
                "operationId": "ListAllWorkspace",
                "responses": {
                    "200": {
                        "description": "List all workspaces of the current collaborator",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Workspace (business) for the collaborator",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/BusinessWorkspace"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "business",
                    "workspace"
                ],
                "summary": "Add a new workspace",
                "description": "Returns the newly created workspace where the current user is an owner.",
                "operationId": "AddWorkspace",
                "requestBody": {
                    "description": "Add workspace request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/WorkspaceProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business Workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessWorkspace"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/workspace\/{workspaceId}": {
            "get": {
                "tags": [
                    "business",
                    "workspace"
                ],
                "summary": "Get a workspace",
                "description": "Returns workspace where the current user is a collaborator.\nRequires user to be authorized to work in this workspace.",
                "operationId": "GetWorkspace",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business Workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessWorkspace"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/workspace\/{workspaceId}\/profile": {
            "put": {
                "tags": [
                    "business",
                    "workspace"
                ],
                "summary": "Change workspace description",
                "description": "Changes the current workspace description.\nRequires user to be the owner of the current workspace.",
                "operationId": "ChangeWorkspaceProfile",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Change workspace profile request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/WorkspaceProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business Workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessWorkspace"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/workspace\/{workspaceId}\/collaboration\/leave": {
            "post": {
                "tags": [
                    "business",
                    "collaboration"
                ],
                "summary": "Leave collaboration",
                "description": "Rescinds the user ability collaborate in the current workspace.\nRequires user to be authorized to work in the current workspace. Requires user to NOT be the owner of it.",
                "operationId": "LeaveWorkspace",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collaborator Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Collaborator Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/collaboration\/fire\/{collaboratorId}": {
            "post": {
                "tags": [
                    "business",
                    "collaboration"
                ],
                "summary": "Remove collaborator",
                "description": "Fires the collaborator from the team. User with the given id will no longer be able to work in the workspace.\nRequires the current user to be the owner of the workspace.",
                "operationId": "FireCollaborator",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collaboratorId",
                        "in": "path",
                        "description": "Collaborator GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collaborator Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Collaborator Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/collaboration\/invite": {
            "post": {
                "tags": [
                    "business",
                    "collaboration"
                ],
                "summary": "Propose invite",
                "description": "Returns id of the new invite to collaborate on the workspace.\nRequires user to be the owner of the current workspace.",
                "operationId": "ProposeInvite",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invite Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Invite Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/collaboration\/invite\/{inviteId}\/accept": {
            "put": {
                "tags": [
                    "business",
                    "collaboration"
                ],
                "summary": "Accept invite",
                "description": "Accepts an invitation to collaborate. Authorizes user to work in the current workspace.",
                "operationId": "AcceptInvite",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inviteId",
                        "in": "path",
                        "description": "Invite GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/collaboration\/invite\/{inviteId}\/discard": {
            "delete": {
                "tags": [
                    "business",
                    "collaboration"
                ],
                "summary": "Discard invite",
                "description": "Returns id of the new invite to collaborate on the workspace.\nRequires user to be the owner of the current workspace.",
                "operationId": "DiscardInvite",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inviteId",
                        "in": "path",
                        "description": "Invite GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collaborator Id",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Collaborator Id",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan": {
            "get": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Get plans",
                "description": "Returns all plans in the current workspace.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "ListAllPlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all plans for the workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Plans for the collaborator",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/BusinessPlan"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            },
            "post": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Add a new plan",
                "description": "Adds a new plan to the current workspace.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "AddPlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Add plan request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PlanProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}": {
            "get": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Get plan",
                "description": "Returns a plans in the current workspace by id.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "GetPlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/profile": {
            "put": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Change plan profile",
                "description": "Changes plan profile.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "ChangePlanProfile",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Change plan profile request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PlanProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/launch": {
            "put": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Launch a plan",
                "description": "Launches a plan to activity. Requires an expiration date for aut expiration. Can be relaunched with a new date.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "LaunchPlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Launch plan request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PlanExpiration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/stop": {
            "put": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Stop a plan",
                "description": "Stops a plan from active state.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "StopPlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/archive": {
            "put": {
                "tags": [
                    "business",
                    "plan"
                ],
                "summary": "Archive a plan",
                "description": "Archives plan. Archived plans are invisible by normal means. Plans are archived automatically on their expiration date.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "ArchivePlan",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/requirement": {
            "post": {
                "tags": [
                    "business",
                    "plan",
                    "requirement"
                ],
                "summary": "Add plan requirement",
                "description": "Adds a new requirement to the plan. Requirement changes are propagated to the relevant cards.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "AddPlanRequirement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Add requirement request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RequirementProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/plan\/{planId}\/requirement\/{requirementId}": {
            "delete": {
                "tags": [
                    "business",
                    "plan",
                    "requirement"
                ],
                "summary": "Remove plan requirement",
                "description": "Removes the requirement from the plan. Requirement changes are propagated to the relevant cards.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "RemovePlanRequirement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requirementId",
                        "in": "path",
                        "description": "Requirement GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            },
            "put": {
                "tags": [
                    "business",
                    "plan",
                    "requirement"
                ],
                "summary": "Change plan requirement description",
                "description": "Changes the requirement description. Description changes are propagated to the relevant cards.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "ChangePlanRequirement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requirementId",
                        "in": "path",
                        "description": "Requirement GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Change requirement description request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RequirementProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business plan",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card": {
            "post": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Issue card",
                "description": "Issues card for a plan to a customer.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "IssueCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Issue card request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/NewCard"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}": {
            "get": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Get card",
                "description": "Returns card by card id if it is issued in the current workspace.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "GetCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/complete": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Complete card",
                "description": "Marks card as completed, meaning the owner has received their bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "CompleteCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/revoke": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Revoke card",
                "description": "Marks card as revoked, meaning the owner cannot use and even see it anymore.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "RevokeCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/block": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Block card",
                "description": "Marks card as blocked, meaning the owner cannot use it temporarily until it's unblocked.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "BlockCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/unblock": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Unblock card",
                "description": "Marks card as unblocked, meaning the owner can interact with it again.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "UnblockCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/achievement": {
            "post": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Note achievement to the card",
                "description": "Marks one of the Plan requirements as achieved in the customer card.\nCard will be marked as satisfied shortly after the last requirement is marked.\nMeaning the card owner is now legible for the bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "NoteCardAchievement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Note card achievement request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Achievement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/achievement\/{achievementId}": {
            "delete": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Dismiss achievement from the card",
                "description": "Removes achievement and removes satisfaction mark from the card if necessary.\nCan only be done until the card owner received their bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "DismissCardAchievement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "achievementId",
                        "in": "path",
                        "description": "Achievement GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BusinessWorkspace": {
                "type": "object",
                "required": [
                    "workspaceId",
                    "keeperId",
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "keeperId": {
                        "description": "Keeper Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "nullable": false,
                        "example": "Nicolas, Lehner and Nolan"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Cumque voluptas doloremque sed vero explicabo velit dolor. Doloremque modi laudantium nobis totam eaque omnis qui. Aut nesciunt distinctio deserunt doloremque sunt."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "nullable": false,
                        "example": "856 Nicolas Rue Apt. 949\nNorth Ramonafort, UT 28205-3145"
                    }
                }
            },
            "BusinessCard": {
                "type": "object",
                "required": [
                    "cardId",
                    "planId",
                    "customerId",
                    "isIssued",
                    "isSatisfied",
                    "isCompleted",
                    "isRevoked",
                    "isBlocked",
                    "achievements",
                    "requirements"
                ],
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "isIssued": {
                        "description": "Whether the card is issued",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isSatisfied": {
                        "description": "Whether all the requirements to receive a bonus are satisfied",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isCompleted": {
                        "description": "Whether the customer has received the bonus for this card",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isRevoked": {
                        "description": "Whether the card has been revoked",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isBlocked": {
                        "description": "Whether the card has been blocked",
                        "type": "boolean",
                        "nullable": false
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "achievementId",
                                "description"
                            ],
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Facilis perspiciatis iusto error modi quisquam rerum est. Cum ex voluptatem vel saepe asperiores libero. Ipsa ad sunt voluptatem ipsa. Sed voluptate dignissimos magnam."
                                }
                            }
                        }
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Occaecati quis ad id natus eos unde non. Eum est dolor corporis necessitatibus quo magni assumenda. Est consectetur labore quam consequatur quo eveniet."
                                }
                            }
                        }
                    }
                }
            },
            "WorkspaceProfile": {
                "description": "Workspace profile request",
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "name": {
                        "description": "Workspace (business) title",
                        "type": "string",
                        "example": "Stark Group"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "example": "Qui quaerat qui ab nam. Cum dolorem cum est. Quia architecto fugiat est consectetur eos consequatur quasi."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "example": "527 Gorczany Ranch Suite 995\nTremblayside, MS 53690-3672"
                    }
                }
            },
            "PlanProfile": {
                "description": "Plan profile request",
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "description": "Plan name",
                        "type": "string",
                        "example": "Laudantium quidem corrupti fuga cumque velit."
                    },
                    "description": {
                        "description": "Plan description",
                        "type": "string",
                        "example": "Dolorem quia praesentium consectetur alias saepe. Necessitatibus est doloribus aliquam minima. Est qui dolor omnis libero nobis voluptatem."
                    }
                }
            },
            "RequirementProfile": {
                "description": "Requirement profile request",
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "description": "Requirement description",
                        "type": "string",
                        "example": "Esse dolorum voluptas aut saepe officia eum. Eum cupiditate aut praesentium soluta quae voluptate iste. Et minima saepe velit dolorem voluptatibus consequatur."
                    }
                }
            },
            "PlanExpiration": {
                "description": "Plan expiration request",
                "type": "object",
                "required": [
                    "expirationDate"
                ],
                "properties": {
                    "expirationDate": {
                        "description": "Plan expiration date",
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Achievement": {
                "description": "Achievement request",
                "type": "object",
                "required": [
                    "achievementId",
                    "description"
                ],
                "properties": {
                    "achievementId": {
                        "description": "Achievement (requirement) id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "description": {
                        "description": "Achievement (requirement) description",
                        "type": "string",
                        "example": "Facere aspernatur officia cupiditate aut iure ullam. Possimus a suscipit quo qui. Et excepturi assumenda reiciendis et sint libero. Velit et dolor deserunt quia."
                    }
                }
            },
            "GetTokenRequest": {
                "description": "New API access token for the specific device request",
                "type": "object",
                "required": [
                    "identity",
                    "password",
                    "deviceName"
                ],
                "properties": {
                    "identity": {
                        "description": "Identity is either phone or email",
                        "type": "string",
                        "example": "heaney.cheyenne@yahoo.com"
                    },
                    "password": {
                        "description": "Password",
                        "format": "password",
                        "type": "string",
                        "example": "HPwpefhFIip;)ua"
                    },
                    "deviceName": {
                        "description": "Device name is required to distinguish between different access tokens",
                        "type": "string",
                        "example": "earum"
                    }
                }
            },
            "RegisterRequest": {
                "description": "Register new user",
                "type": "object",
                "required": [
                    "phone",
                    "name",
                    "password",
                    "deviceName"
                ],
                "properties": {
                    "phone": {
                        "description": "Phone",
                        "type": "string",
                        "example": "308.394.3921"
                    },
                    "email": {
                        "description": "Email is required if phone is not provided",
                        "type": "string",
                        "example": "rippin.alba@pouros.info"
                    },
                    "name": {
                        "description": "Customer name",
                        "type": "string",
                        "example": "Prof. Aurelie Deckow"
                    },
                    "password": {
                        "description": "Password",
                        "format": "password",
                        "type": "string",
                        "example": "j't:5cG\\\/"
                    },
                    "deviceName": {
                        "description": "Device name is required to distinguish between different access tokens",
                        "type": "string",
                        "example": "quam"
                    }
                }
            },
            "NewCard": {
                "description": "New card request",
                "type": "object",
                "required": [
                    "planId",
                    "customerId"
                ],
                "properties": {
                    "planId": {
                        "description": "Plan id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "customerId": {
                        "description": "Customer id",
                        "format": "uuid",
                        "type": "string"
                    }
                }
            },
            "IssuedCard": {
                "type": "object",
                "required": [
                    "cardId",
                    "workspaceName",
                    "workspaceAddress",
                    "customerId",
                    "description",
                    "satisfied",
                    "completed",
                    "achievements",
                    "requirements"
                ],
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "workspaceName": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "nullable": false,
                        "example": "Huel-Abernathy"
                    },
                    "workspaceAddress": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "nullable": false,
                        "example": "641 Maye Gateway\nOndrickafurt, ME 84248"
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "description": {
                        "description": "Card (plan) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Quia et quis eius est sit dolorum quis pariatur. Unde veniam et id dicta unde rem. Praesentium unde non voluptatibus consectetur. Facilis et vitae voluptatem repellendus laboriosam voluptatem nemo."
                    },
                    "satisfied": {
                        "description": "Whether all requirements to receive a bonus are satisfied",
                        "type": "boolean",
                        "nullable": false
                    },
                    "completed": {
                        "description": "Whether customer has received the bonus for this card",
                        "type": "boolean",
                        "nullable": false
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "achievementId",
                                "description"
                            ],
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Minima enim sed amet inventore magni iusto. Voluptas itaque quasi iure suscipit. Facere in aliquid aut voluptatem similique qui officia. Quia quo sit accusantium sapiente."
                                }
                            }
                        },
                        "example": "Eos quasi ullam est mollitia consequatur dolor. Quasi vero aut quisquam delectus. Quaerat ullam consequatur aspernatur delectus non sint eligendi sed."
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Aut distinctio recusandae qui. Facilis non veritatis inventore. Beatae voluptatum culpa doloremque velit vitae facilis quo."
                                }
                            }
                        }
                    }
                }
            },
            "Profile": {
                "type": "object",
                "required": [
                    "profileId",
                    "name",
                    "phone"
                ],
                "properties": {
                    "profileId": {
                        "description": "Profile Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Customer name",
                        "type": "string",
                        "example": "Dr. Verona Stanton"
                    },
                    "phone": {
                        "description": "Phone",
                        "type": "string",
                        "example": "1-682-653-9385"
                    }
                }
            },
            "CustomerWorkspace": {
                "type": "object",
                "required": [
                    "workspaceId",
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "nullable": false,
                        "example": "Langworth, Cole and Rutherford"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Autem voluptates earum maxime officia hic. In debitis distinctio qui recusandae aspernatur esse tenetur. A sunt illo hic praesentium quo."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "nullable": false,
                        "example": "7455 Boehm Heights\nEast Juvenalbury, CT 69326"
                    }
                }
            },
            "BusinessPlan": {
                "type": "object",
                "required": [
                    "planId",
                    "workspaceId",
                    "name",
                    "description",
                    "isLaunched",
                    "isStopped",
                    "isArchived",
                    "expirationDate",
                    "requirements"
                ],
                "properties": {
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Plan name",
                        "type": "string",
                        "nullable": false,
                        "example": "Iure ab ipsum illo deleniti iusto exercitationem."
                    },
                    "description": {
                        "description": "Plan description",
                        "type": "string",
                        "nullable": false,
                        "example": "Nihil hic sint explicabo dolores in autem occaecati. Quidem alias expedita voluptatibus. Optio maxime facilis et tenetur tempora voluptatibus quisquam."
                    },
                    "isLaunched": {
                        "description": "Whether the plan is launched",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isStopped": {
                        "description": "Whether the plan is stopped",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isArchived": {
                        "description": "Whether the plan is archived",
                        "type": "boolean",
                        "nullable": false
                    },
                    "expirationDate": {
                        "description": "Plan expiration date",
                        "format": "date-time",
                        "type": "string",
                        "nullable": true
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Odio est voluptatem ullam labore explicabo qui. Doloribus sed illum fuga rerum ut architecto. Dolorem quae quia eveniet nihil blanditiis assumenda."
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "ParametersAssertionException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Parameters Assertion Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Wrong string format for UUID"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation errors",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message",
                                "errors"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "The given data was invalid."
                                },
                                "errors": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "nullable": false,
                                    "example": {
                                        "field": [
                                            "Something is wrong with this field!"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Forbidden",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Authorization Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Subject <Subject Id> is not authorized for <Resource Type> <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "UserAlreadyRegisteredException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "User Already Registered Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "User with given identity already registered"
                                }
                            }
                        }
                    }
                }
            },
            "UnexpectedException": {
                "description": "Internal Server Error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Unexpected Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Unexpected exception"
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Requested resource not found",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Not found exception: <Resource Name>: <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthorized",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Authentication Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Invalid access token"
                                }
                            }
                        }
                    }
                }
            },
            "DomainException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Domain Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Domain logic forbids requested operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "tags": [
        {
            "name": "customer",
            "description": "Pertains to customer operations"
        },
        {
            "name": "business",
            "description": "Pertains to all workspace operations"
        },
        {
            "name": "card",
            "description": "Pertains to workspace operations with cards"
        },
        {
            "name": "collaboration",
            "description": "Pertains to workspace operations with collaboration"
        },
        {
            "name": "plan",
            "description": "Pertains to workspace operations with plans"
        },
        {
            "name": "requirement",
            "description": "Pertains to workspace operations with requirements in a plan"
        },
        {
            "name": "workspace",
            "description": "Pertains to workspace-specific operations"
        }
    ]
}
